buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.flywaydb:flyway-mysql:10.11.0'
    }
}

plugins {
    id 'java-conventions'
    id 'jacoco-report-aggregation'
    id 'application'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.flywaydb.flyway' version '10.11.0'
}

group 'br.com.leevelop.admin.catalog.infrastructure'

bootJar {
    archiveBaseName.set('application')
    archiveVersion.set('1.0.0')
    archiveClassifier.set('release')
    destinationDirectory.set(rootProject.layout.buildDirectory.dir("libs"))
}

dependencies {
    implementation(project(":domain"))
    implementation(project(":application"))

    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
    }
    implementation 'org.springframework.boot:spring-boot-starter-undertow'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'

    // ✅ vavr
    implementation 'io.vavr:vavr:0.10.4'

    // ✅ MySQL Connector (compatible with Java 21)
    runtimeOnly 'com.mysql:mysql-connector-j'

    // ✅ Flyway Core
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-mysql'

    // ✅ Swagger and Spring Docs
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    implementation 'com.fasterxml.jackson.module:jackson-module-afterburner'

    implementation('org.yaml:snakeyaml:2.4')

    testImplementation(project(path: ':domain', configuration: 'testClasses'))

    testImplementation 'org.flywaydb:flyway-core'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testImplementation('org.testcontainers:testcontainers:1.19.1')
    testImplementation('org.testcontainers:mysql:1.19.1')
    testImplementation('org.testcontainers:junit-jupiter:1.19.1')

    testRuntimeOnly 'com.h2database:h2'
}

flyway {
    url = System.getenv('FLYWAY_DB') ?: 'jdbc:mysql://127.0.0.1:3306/adm_videos'
    user = System.getenv('FLYWAY_USER') ?: 'root'
    password = System.getenv('FLYWAY_PASS') ?: '123456'
    locations = ['classpath:db/migration']
}

testCodeCoverageReport {
    reports {
        xml {
            enabled true
            destination file("$rootDir/build/reports/jacoco/test/jacocoTestReport.xml")
        }

        html {
            enabled true
            destination file("$rootDir/build/reports/jacoco/test/")
        }
    }
}

tasks.named("jacocoTestReport") {
    dependsOn tasks.named("testCodeCoverageReport", JacocoReport)
}